function [initial_H] = LP_initialization(...
    n_sample,...
    b_ind,...
    db,...
    alpha,...
    sw,...
    cL,...
    u,...
    dz_ind_plus,...
    dz_ind_minus,...
    gamma)
%LP_INITIALIZATION Summary of this function goes here
%   Detailed explanation goes here
y_=1e-2;

y0=zeros(n_sample,1);
y0(b_ind)=1;
dy_LP_test_init=[y0;sum(y0)*y_];
dz_LP_test_init=-(db/2)*1e0;

scalee=1/alpha;
% dy_LP_test_init=dy_LP_test_init*scalee;
% dz_LP_test_init=dz_LP_test_init*scalee;
% cL=cL*scalee;
% alpha=0;
% scalee=1;

% % % mplus=sum(dz_LP_test_init(dz_ind_plus));
% % % mminus=-sum(dz_LP_test_init(dz_ind_minus));
% % % alpha=(...
% % %       ((1+(mminus/mplus))*sw-(mminus/mplus))*(dy_LP_test_init(n_sample+1)+sum(dz_LP_test_init))...
% % %       -sum(dz_LP_test_init(dz_ind_minus))+(mminus/mplus)*sum(dz_LP_test_init(dz_ind_plus))...
% % %       )*(mplus/(mplus+mminus));
% % % disp(['alpha: ' num2str(alpha)]);

rng(0);
fv_H=randn(n_sample+2,1);

leftEnds_diff=Inf;
while leftEnds_diff>1e-6
    
[initial_H] = construct_H(sw,n_sample,...
    cL,...
    u,...
    alpha,...
    dy_LP_test_init,...
    dz_LP_test_init,...
    dz_ind_plus,...
    dz_ind_minus,...
    4,...
    gamma);

initial_H=initial_H*scalee;

[fv_H,...
    scaled_M,...
    scaled_factors] = ...
    compute_scalars(...
    initial_H,...
    fv_H); % compute scalars

scaled_M_offdia=scaled_M;
scaled_M_offdia(1:n_sample+2+1:end)=0;
leftEnds=diag(initial_H)-sum(abs(scaled_M_offdia),2);
leftEnds_diff=sum(abs(leftEnds-mean(leftEnds)));
disp(['v3 LP before LP LeftEnds mean: ' num2str(mean(leftEnds)) ' | LeftEnds difference: ' num2str(leftEnds_diff)]);

% alpha=alpha*(1+1e-2);
% gamma=gamma*(1-1e-2);
y_=y_*(1+1e-3);
dy_LP_test_init=[y0;sum(y0)*y_];
end

end

